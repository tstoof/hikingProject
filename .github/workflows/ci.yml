name: Django CI Pipeline

on:
  push:
    branches:
      - development  # Trigger on push to the development branch (adjust as needed)
      - 'feature/*'  # Trigger on push to any feature branches, using a pattern
  pull_request:
    branches:
      - development  # Trigger for pull requests into the development branch
      - main         # Trigger for pull requests into the main branch (e.g., final merge)

jobs:
  check_base_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Check base branch
        run: |
          if [[ $GITHUB_REF != "refs/heads/development" ]]; then
            echo "Error: Pull requests must be merged from the 'development' branch into 'main'."
            exit 1
          fi

  setup:
    runs-on: ubuntu-latest  # Run on the latest Ubuntu runner

    steps:
    # Step 1: Checkout code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'  # Specify the Python version (adjust as needed)

    # Step 3: Set up virtual environment
    - name: Set up virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate  # Activate the virtual environment
        python -m pip install --upgrade pip  # Upgrade pip to the latest version
        cd hikingApp
        pip install -r requirements.txt  # Install dependencies from requirements.txt
        cd ..

    # Step 4: Run migrations (useful for setting up the database schema)
    - name: Run migrations
      run: |
        source venv/bin/activate  # Activate the virtual environment
        cd hikingApp
        python manage.py migrate  # Run Django migrations
        cd ..

    # Step 5: Run tests (make sure you have tests in place for this to work)
    - name: Run tests
      run: |
        source venv/bin/activate  # Activate the virtual environment
        cd hikingApp
        python manage.py test hike  # Run Django tests for the 'hike' app
        cd ..

    # Optional: Step 6: Collect static files (if needed for deployment or testing)
    - name: Collect static files
      run: |
        source venv/bin/activate  # Activate the virtual environment
        cd hikingApp
        python manage.py collectstatic --noinput  # Collect static files
        cd ..

    # # Step 7: Run the Django development server
    # - name: Run Django server
    #   run: |
    #     source venv/bin/activate  # Activate the virtual environment
    #     nohup python manage.py runserver 0.0.0.0:8000 &  # Run server in the background


    # # Step 8: Health check after running the server
    # - name: Health check
    #   run: |
    #     curl http://localhost:8000/


    # Optional: Step 9: Deploy to production (if required, this could be added here)
    # - name: Deploy to production
    #   run: ./deploy_script.sh

